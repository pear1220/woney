1. 배열

/*
 	=== 배열(Array)이란? ===
 	동일한 데이터타입을 가지는 여러개의 데이터를 담을 수 있는 데이터 타입을 말한다.
 	그리고 배열 또한 객체라는 것을 꼭 기억하도록 하자!!!!
 */

package my.day8;

public class ArrayTest {

	public static void main(String[] args) {
		
		// 시험과목 성적(국어, 영어, 수학, 사회, 과학, 체육, 음악....)
		int kor=100, eng=90, math=95, society=70, science=98, physical=100,music=90;
		int total = kor+eng+math+society+science+physical+music;
		
		System.out.println("총점: "+total);
		System.out.println("평균: "+Math.round((double)total/7*10)/10.0);
		/*
		 	총점: 643
			평균: 91.9
		 */
		
		System.out.println("\n=====배열======");
		// 1). 배열의 선언
		int[] subject;
		//또는
		//int subject[];
		
		// 2). 메모리에 값을 할당을 해준다.
			subject = new int[7];
			// 배열로 선언된 변수에는 자동적으로 초기값이 들어가 있다.
			// 정수는 0, 실수는 0.0, String 을 포함한 객체는 null이 들어간다.
			
		/*
		 -----------------------------------
		 | 0 | 1 | 2 | 3 | 4 | 5 | 6 |
		 -----------------------------------
		 위의 숫자는 배열의 인덱스를 가리키는 번호로서 0부터 시작하여 1씩 증가한다.
		 
		 배열에 저장된 데이터를 표현할때는 아래와 같이 배열명[인덱스번호]로 나타낸다.
		 subject[0] subject[1] subject[2] subject[3] subject[4] subject[5] subject[6]
		 
		 */
			System.out.println("배열 subject 의 길이 : " + subject.length);
			//배열 subject 의 길이 : 7
			System.out.println("\n");
			
			for(int i=0; i<subject.length; i++) {
				System.out.println("subject["+i+"] => "+subject[i]);
			}
			/*
			 	subject[0] => 0
				subject[1] => 0
				subject[2] => 0
				subject[3] => 0
				subject[4] => 0
				subject[5] => 0
				subject[6] => 0
			 */
			
			System.out.println("\n");
			
			// 3). 데이터의 초기화
				subject[0] = 100;
				subject[1] = 90;
				subject[2] = 95;
				subject[3] = 70;
				subject[4] = 98;
				subject[5] = 100;
				subject[6] = 90;
			
			for(int i=0; i<subject.length; i++) {
				System.out.println("subject["+i+"] => "+subject[i]);
			}
			total = 0;
			for(int i=0; i<subject.length; i++) {
				total +=subject[i];
			}
				System.out.println("총점: "+total);
				System.out.println("평균: "+Math.round((double)total/7*10)/10.0);
				
				System.out.println("\n=======================");
				
			/*
			 	위의 	1). 배열의 선언과 
			 		2). 메모리에 할당을 해주는것을 따로 하지 않고
			 	아래와 같이 동시에 하는 것을 많이 사용한다.
			 */
			int[] gaumok = new int[7];
			// 3). 데이터의 초기화
			gaumok[0] = 100;
			gaumok[1] = 90;
			gaumok[2] = 95;
			gaumok[3] = 70;
			gaumok[4] = 98;
			gaumok[5] = 100;
			gaumok[6] = 90;
			
			for(int i=0; i<gaumok.length; i++) {
				System.out.println("subject["+i+"] => "+gaumok[i]);
			}
			total = 0;
			for(int i=0; i<gaumok.length; i++) {
				total +=gaumok[i];
			}
				System.out.println("총점: "+total);
				System.out.println("평균: "+Math.round((double)total/7*10)/10.0);
				
				System.out.println("\n=======================");
				
			/*
			 	위의 	1). 배열의 선언과 
			 		2). 메모리에 할당을 해주는것과
			 		3). 데이타 초기화를 해주는 것을 따로 하지 않고
			 	아래와 같이 동시에 하는 것을 많이 사용한다.
			 */
			int[] course = new int[] {100,90,95,70,98,100,90};	
			
			total = 0;
			for(int i=0; i<course.length; i++) {
				total +=course[i];
			}
				System.out.println("총점: "+total);
				System.out.println("평균: "+Math.round((double)total/7*10)/10.0);
				
				System.out.println("\n=======================");
				
			/*
			 	위의 	1). 배열의 선언과 
			 		2). 메모리에 할당을 해주는것과
			 		3). 데이타 초기화를 해주는 것을 따로 하지 않고
			 	아래와 같이 동시에 하는 것을 많이 사용한다.
			 	new int[]은 생략 가능하다.
			 */
			int[] course2 = {100,90,95,70,98,100,90};	
			
			total = 0;
			for(int i=0; i<course2.length; i++) {
				total +=course2[i];
			}
				System.out.println("총점: "+total);
				System.out.println("평균: "+Math.round((double)total/7*10)/10.0);
				
				System.out.println("\n=======================");
			
			// 배열 또는 collection에서 사용 되어지는 개선된(확장된) for문
			// for(배열요소 데이터형 변수명 : 배열명 또는 collection명)
			total = 0;
			for(int val : course2) {
				System.out.println(val);
			}
			for(int val : course2) { // 배열의 길이 만큼 자동적으로 반복한 후 빠져나간다.
				total += val;
			}
			System.out.println("총점: "+total);
			System.out.println("평균: "+Math.round((double)total/7*10)/10.0);
			
			System.out.println("\n=======================");
		
	}//end of main()---------------------------------------------------

}//end of class ArrayTest ////////////////


====================================================================================================================

2. 배열에서 한글자씩 체크
package my.day8;

import my.util.MyUtil;

public class ArrayTest2 {
	
	public static void analyzeString(String passwd) {
		int de = 0,so = 0,su = 0,mun = 0;
		char[] chrArr = passwd.toCharArray(); // String 타입의 글자를 하나씩 배열로 쪼개서 넣는다
		for(char ch : chrArr) {
			switch (charcheck(ch)) {
			case 1:
				su++;
				break;
			case 2:
				de++;
				break;
			case 3:
				so++;
				break;
			case 4:
				mun++;
				break;
			}
					/*
					if (Character.isDigit(ch)) {
						su++; 
					} else if(Character.isUpperCase(ch)) {
						de++;
					}else if(Character.isLowerCase(ch)) {
						so++;
					}else {
					 mun ++;
					} // end of if()-----------------
					*/
		}//end of for() -------------
		String result = "영문대문자 : " +de+"개\n"+
	 			"영문소문자 : " +so+"개\n" +
	 			"숫자 : "+su+"개\n" +
	 			"특수문자 : "+mun+ "개\n";
	 System.out.println(result);	
	}//end of void analyzeString

	public static int charcheck(char ch) {
		int result = 0;
		if (Character.isDigit(ch)) {
			result = 1; 
		} else if(Character.isUpperCase(ch)) {
			result = 2;
		}else if(Character.isLowerCase(ch)) {
			result = 3;
		}else {
			result = 4;
		}
		return result;
	}
	
	//찾고자하는 성씨 출력해주는 메소드 생성하기
	public void serchFirstName(String[] strArr, char firstname) {
		int flag = 0;
		for(int i=0; i<strArr.length; i++) {
			char ch =strArr[i].charAt(0);
			
			if(ch == firstname) {
				flag = 1;
				System.out.println(strArr[i]);
			}
			
		}//end of for() -----------------------
		
		if(flag == 0)
			System.out.println(firstname+"씨는 없습니다.");
		
	}//end of void serchFirstName(String[] strArr, char firstname) ----
	
	public void searchLastName(String[] strArr, char lastname) {
		int flag =0;
	
		for(int i=0; i<strArr.length; i++) {
			
			char ch = strArr[i].charAt(strArr[i].length()-1); // ***********마지막 배열에서 -1을 해서 그 배열을 사용
			
			if (ch == lastname) {
				flag = 1;
				System.out.println(strArr[i]);
			}//end of if()-----------------------
			
		}//end of for()---------------------------
		if(flag == 0) {
			System.out.println("마지막 글자가 "+lastname+" 사람은 없습니다.");
		}//end of if()----------------------------
		
	}//end of void searchLastName(String[] strArr, char lastname)
	
	
	//=== 이름중에 '김'자 들어있는 사람 출력하기
	public void searchName(String[] strArr, char name) {
		int flag = 0;
		for(int i=0; i<strArr.length; i++) {
			for(int j=0; j<strArr[i].length();j++) {
			
				char ch = strArr[i].charAt(j);
			
				if(ch == name) {
					flag = 1;
					System.out.println(strArr[i]);
				} break;
			
			}//end of 내부 for문
			
		}//end of 외부 for문
		if(flag==0)
			System.out.println(name+"라는 글자가 포함된 사람은 없습니다.");
	}//end of void searchName(String[] strArr, char name)
	// charAt() toCarArray() 의 차이는 배열이냐 변수이냐 차이
	
	
	
	
	
	public static void main(String[] args) {

		String[] myfriend = {"김수한","이유림","김수한무거북이와두루미","서묘음", "김동현", "문김정", "김유정","이혜림", "이림"};
		
		System.out.println(myfriend[2]);
		// 김수한무거북이와두루미
		
		System.out.println("\n");
		
		char[] chrArr = myfriend[2].toCharArray();
		
		System.out.println(chrArr[2]);// 한
		
		System.out.println("\n");
		
		for(char ch :chrArr) {
			System.out.println(ch);
		}
		/*
		 	김
			수
			한
			무
			거
			북
			이
			와
			두
			루
			미
		 */
		
		String passwd = "qwerA1234$";
		
		ArrayTest2.analyzeString(passwd);
		/*
		 	영문대문자 : 1개
		 	영문소문자 : 4개
		 	숫자 : 4개
		 	특수문자 : 1개
		 */
		
		System.out.println("\n==============================\n");
		
		String[] passwordArr = {"abCD123$!","superman","qwer1","123456789","asdf0070#","qwer1234"};
		/*
		 	암호는 7글자 이상으로 영문자,숫자,특수문자가 혼합되어져야 한다.
		 	배열 passwordArr에 저장되어 있는 것 중에서 암호로 사용가능한 것만 출력하세요.
		 */
		/*
		 	== 사용가능한 암호 ==
		 	abCD123$!
		 	asdf0070#
		 */
		System.out.println("== 사용가능한 암호 ==");
		for(String pw :passwordArr) { //확장for문
			if(MyUtil.passwdCheck(pw))
				System.out.println(pw);
		}//end of for()----------------------------
	
		System.out.println("\n==============================\n");
		System.out.println("==String 배열 myfriend 에 저장되어진 데이터 출력 ==");
		
		for(int i=0;i<myfriend.length;i++) {
			String comma = ( i ==myfriend.length-1)? "\n ": ", " ;
			System.out.print(myfriend[i]+comma);
		}
		
		System.out.println("\n==============================\n");
		
		char ch1 = "대한민국".charAt(0); // .charAt[0]할경우 대한민국에서 대라는 글자하나만 담겨진다. 
		System.out.println(ch1);
		
		for(int i=0;i<myfriend.length;i++) {
			String comma = ( i ==myfriend.length-1)? "\n": ", " ;
			System.out.print(myfriend[i].charAt(0)+comma);
		}
		
		System.out.println("\n==============================\n");
		//김씨만 출력하기
		for(int i=0;i<myfriend.length;i++) {
			if(myfriend[i].charAt(0) == '김')
			System.out.println(myfriend[i]);
		}
		
		System.out.println("\n==============================\n");
		ArrayTest2 obj = new ArrayTest2();
		//찾고자하는 성씨 출력하기
		obj.serchFirstName(myfriend, '최');
		
		System.out.println("\n==============================\n");
		// 찾고자하는 마지막 글자에 해당하는 이름 출력하기
		
		obj.searchLastName(myfriend,'림');
		//이유림
		//이혜림
		//이림
		
		System.out.println("\n==============================\n");
		obj.searchName(myfriend,'김');
		//=== 이름중에 '김'자 들어있는 사람 출력하기
		//김수민
		//김수한무거북이와두루미
		//김동현
		//문김정
		//김유정
		
	}//end of main()-------------------------------

}//end of class ArrayTest2 ////////////////

======================================================================================================
3. 문자열을 받아 문자를 검색
package my.day8;

import my.util.MyUtil;

public class ArrayTest3 {

	public static void main(String[] args) {
		
		String str = "대한민국서울시종로구KH정보교육원";
					//01 23 4567 89
		String substr = str.substring(4, 7);
		//문자열 str에서 시작 인덱스 번호 4부터 마지막 인덱스 번호 7 앞까지만 추출하는것이다.
		System.out.println(substr);
		//서울시
		
		System.out.println("\n======================\n");
			
		str = "KH정보교육";
		// KH	KH정
		// H정	H정보
		// 정보	정보교
		// 보교	보교육
		// 교육	 4개
		//	5개
		//		 6-3+1
		// 6-2+1
			
		str = "KH정보교육원";   // 교육원    7 - 3 + 1 ==> 5     7-2
		// KH	KH정
		// H정	H정보
		// 정보	정보교
		// 보교	보교육
		// 교육	교육원
		// 육원	 5개
		//	6개	 7-3+1
		// 7-2+1
		
		
		// 글자 2개씩 잘라서 나타내기
		for(int i=0; i<str.length()-1;i++) {
			//str.substring(0,2);
			//str.substring(1,3);
			//str.substring(2,4);
			String result = str.substring(i, i+2);
			System.out.println(result);
		}
		// KH정보교육원    => 글자수 : 7개          7 - 2 + 1 ==> 6    7-1
		/*
		 	KH
			H정
			정보
			보교
			교육
			육원
		 */
		System.out.println("\n======================\n");
		// 글자 3개씩 잘라서 나타내기
		for(int i=0; i<str.length()-2;i++) {
			//str.substring(0,3);
			//str.substring(1,4);
			//str.substring(2,5);
			String result = str.substring(i, i+3);
			System.out.println(result);
		}
		/*
		 	KH정
			H정보
			정보교
			보교육
			교육원
		 */
		
		System.out.println("\n======================\n");
		// 아래의 strArr에서 "교육" 이라는 문자열이 들어있는 것을 추출하려고 한다.
		String[] strArr = {"KH정보교육원","서울교육대학교","경기도수원시","서울시 종로구","훈련교육대"};
		int flag = 0;
		for(int i=0;i<strArr.length;i++) {
			
			
			for(int j=0; j<strArr[i].length()-1;j++) {
				
				String word = strArr[i].substring(j,j+2);
				
				if("교육".equals(word)) {
					flag =1;
					System.out.println(strArr[i]);
					break;
				}
				
			}//end of 내부 for
			
		}//end of 외부 for()---------------
		if(flag ==0) {
			System.out.println("찾고자하는 단어를 가진 문자열은 없습니다.!!");
		}
			
		System.out.println("\n======================\n");
		
		String names="손성민,김민석,김남준,강민준,박병국";
		String[] namesArr = names.split(","); //문자열에서 ,를 짤라서 배열에 넣는다
		for(int i =0; i<namesArr.length;i++) {
			System.out.println((i+1)+"."+namesArr[i]);
		}
		System.out.println("\n======================\n");
		String result = MyUtil.searchword(strArr,"교육");
		System.out.println(result);
		
		System.out.println("\n======================\n");
		String[] resultArr = result.split(",");
		for(String s : resultArr) {
			System.out.println(s);
		}
	}//end of main
}//end of ArrayTest3//////////////////////

=====================================================================================

4. 퀴즈

package my.day8.quiz;

import java.util.Scanner;

public class ArrayQuiz {
	public void menu() {
		String result = "---->> 메뉴 <<-----\n" +
						"1. 성찾기\n" +
						"2. 이름검색\n" +
						"3. 종료\n"+
						">> 메뉴번호를 입력 => ";
		System.out.print(result);
	}
	public void firstname(String[] name, char first) {
		int flag =0;
		for(int i = 0 ; i<name.length ;i++) {
			char a = name[i].charAt(0);
			
			if(a == first) {
				flag =1;
				System.out.println(name[i]);
			}//end of if() ------
		}//end of for()------
		
		if (flag == 0 ) {
			System.out.println(first+"성을 가진 사람이 없습니다.");
			
		}//end of if -------
	
	}//end of firstname(String[] name, char first) 
	
	
	public void strname(String[] name, String selectname) {
		int flag = 0;
		for(int i=0;i<name.length;i++) {
			for(int j=0; j<name[i].length() - (selectname.length()-1);j++ ) {
				String searchname = name[i].substring(j, j+selectname.length()); 
				if(selectname.equals(searchname)) {
					flag =1;
					System.out.println(name[i]);
					}//end of if
			}// end of 내부 for
		}//end of 외부 for
		if(flag==0) {
			System.out.println("검색한 이름이 없습니다.");
		}
		
	}//end of strname(String[] name, String selectname)
	
	public boolean go(char yn){
		boolean bool = false;
		
		if('y' == yn || 'Y' == yn) {
		 bool = true;
		}
		else if('N' == yn || 'n' == yn) {
		 bool = false;
		} else
			bool =true;
		
		return bool;
	}
	
	public static void main(String[] args) {
		String[] namesArr = {"이규호","김종성","윤찬영","조원영","임규하","김규호","이종성","임규성"};
		Scanner sc = new Scanner(System.in);
		ArrayQuiz obj = new ArrayQuiz();
		do {
			try {
				obj.menu();
				int menuno = Integer.parseInt(sc.nextLine());
				if(menuno == 1) {
					System.out.print(">> 검색하실 성 입력 => ");
					char first = sc.nextLine().charAt(0);
					obj.firstname(namesArr,first);
					System.out.print(">>계속 하실래요?(y/n) => ");
					char yn = sc.nextLine().charAt(0);
					if(obj.go(yn)) {
						continue;	
					} break;
				}else if (menuno == 2) {
					System.out.print(">> 검색하실 글자 입력 => ");
					String str = sc.nextLine();
					obj.strname(namesArr,str);
					System.out.print(">>계속 하실래요?(y/n) => ");
					char YN = sc.nextLine().charAt(0);
					if(obj.go(YN)) {
						continue;	
					} break;
				}else if (menuno == 3) {
					break;

				}else 
					System.out.println("1부터 3까지만 입력해 주세요");
					continue;
				
				
			} catch (NumberFormatException e) {
				System.out.println("숫자를 입력하세요");
			}
			
			
		} while(true);
		System.out.println(">> 프로그램 종료!! 안녕히 가세요~~");
	}

}

/*
 	MyUtil.seachword();을 사용하지 마세요

 	1. String namesArr을 생성합니다.
 	2. "이규호,김종성,윤찬영,조원영,임규하,김규호,이종성,임규성" 이것을 입력합니다.
 	
 	프로그램을 실행을 하면
 	
 	---->> 메뉴 <<-----
 	1. 성찾기
 	2. 이름검색
 	3. 종료
 	
 	>> 메뉴번호 입력 => 1
 	>> 검색하실 성 입력 => 김
 	김종성
 	김규호 
 	
 	>>계속 하실래요?(y/n) => y
 	
 	---->> 메뉴 <<-----
 	1. 성찾기
 	2. 이름검색
 	3. 종료
 	
 	>> 메뉴번호 입력 => 2
 	>> 검색하실 글자 입력 => 규호
 	이규호
 	김규호 
 	
 	>>계속 하실래요?(y/n) => y
 	
 	---->> 메뉴 <<-----
 	1. 성찾기
 	2. 이름검색
 	3. 종료
 	
 	>> 메뉴번호 입력 => 2
 	>> 검색하실 글자 입력 => 규
 	이규호
 	김규호
 	임규하
 	임규성
 	
 	>>계속 하실래요?(y/n) => y
 	
 	---->> 메뉴 <<-----
 	1. 성찾기
 	2. 이름검색
 	3. 종료
 	
 	>> 메뉴번호 입력 => 3
 	>> 프로그램 종료!! 안녕히 가세요~~
 	
 */



