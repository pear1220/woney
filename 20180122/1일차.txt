2018-01-22
응용SW엔지니어 및 안드로이드 APP개발자 양성과정_3회차

----------------------------------------------------------------------------------------------------------------------------------
자바 설치

www.oracle.com

JAVASE -> JDK -> JAVA SE DEVELOPMENT KIT 8U162 설치

환경변수 설정
1. path 새로 만들기 -> 자바 경로 bin 위치까지 지정 
ex)C:\Program Files\Java\jdk1.8.0_162\bin

2. 확인

3. 새로만들기 -> 변수이름: JAVA_HOME
              변수값 : C:\Program Files\Java\jdk1.8.0_162

4. path 새로만들기 %JAVA_HOME%\bin

5. 새로만들기 -> 변수이름: CLASSPATH
	      변수 값 : .
(컴파일은 현재 디렉터리에 있다)

6. cmd에서 C:\Users\user1>javac 칠 경우 C:\Program Files\Java\jdk1.8.0_162\bin 위치의 환경변수로 javac.exe를 바로 실행가능 

7. C:\Users\user1>path
PATH=C:\Program Files\Java\jdk1.8.0_162\bin;C:\Program Files\Java\jdk1.8.0_162\bin;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Users\user1\AppData\Local\Microsoft\WindowsApps;

8.C:\Users\user1>set classpath
CLASSPATH=. (현재위치)

9. C:\Users\user1>java -version (버전확인)
java version "1.8.0_162"
Java(TM) SE Runtime Environment (build 1.8.0_162-b12)
Java HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)

-------------------------------------------------------------------------------------------------------------------------------------

자바 수업

1. 주석
// 1줄 주석문

/*
	여러줄 
	주석문
*/

/**
	문서화 주석
	==> javadoc를 이용해서 API 문서를 만들때 사용한다.
*/
/*
2. CLASS 구조


CLASS(클래스)는 어떠한 어플리케이션 제작시 필요한 설계도면 이라고 생각하자.
	
	1. 패키지 선언문
	   ==> 패키지랑 클래스가 저장되어진 디렉터리 경로라고 보면된다.

	   package 패키지명;		==> 이때 패키지명은 반드시 소문자로 시작해야 한다
	예 > packge my.com;


        2.IMPORT 문

	예 > import 패키지명.클래스명;
		import java.lang.String;
		import java.lang.System;
		import java.lang.*;
	사이트 : https://docs.oracle.com/javase/8/docs/api/index.html

	3. 클래스 선언문

	4. 컴파일하기

	5. 실행하기
*/
//import java.lang.String;
//import java.lang.System;

//import java.lang.*;  .* lang안에 있는 패키지를 전부 쓰겠다라는 뜻 lang은 빈번하게 사용하기 때문에 따로 import를 안해도 import하게 되어진다.

import java.util.Date;

public class HELLO // 클래스명과 파일 저장명은 동일해야된다.
{
	public static void main(String[] args) 
	{
		System.out.println("Hello Java!");
		System.out.println("안녕하세요? 반갑습니다. ~~^^");
		// System.out 은 모니터(콘솔화면)를 뜻한다.
		// System.out.println("안녕하세요? 반갑습니다. ~~^^"); 은 
		// 모니터(콘솔화면)에 문자열 안녕하세요? 반갑습니다. ~~^^ 을 출력해라는 말이다.

		System.out.println(new Date());
		// 현재날짜를 나타내어 본다.
		// new Date()가 현재 시스템의 날짜시간을 얻어오는 것이다.

	}
}


3. 자바 도움말 사이트 : https://docs.oracle.com/javase/8/docs/api/index.html

4. 우리가 아는 언어를 기계어로 바꾸는 것을 컴파일한다라고 한다.

C:\Users\user1>cd c:\myjava\day1

c:\myjava\day1>dir
 C 드라이브의 볼륨: 로컬디스크
 볼륨 일련 번호: C686-9A23

 c:\myjava\day1 디렉터리

2018-01-22  오후 04:32    <DIR>          .
2018-01-22  오후 04:32    <DIR>          ..
2018-01-22  오후 04:32             1,025 HELLO.java
               1개 파일               1,025 바이트
               2개 디렉터리  299,288,547,328 바이트 남음

c:\myjava\day1>javac HELLO.java

==> javac를 사용할 경우 HELLO.class파일이 생성된다 메모장에 확인해 보면 기계어로 변경된것을 확인 가능할수 있다.

c:\myjava\day1>dir
 C 드라이브의 볼륨: 로컬디스크
 볼륨 일련 번호: C686-9A23

 c:\myjava\day1 디렉터리

2018-01-22  오후 04:39    <DIR>          .
2018-01-22  오후 04:39    <DIR>          ..
2018-01-22  오후 04:39               471 HELLO.class
2018-01-22  오후 04:32             1,025 HELLO.java
               2개 파일               1,496 바이트
               2개 디렉터리  299,288,539,136 바이트 남음

c:\myjava\day1>java HELLO
Hello Java!
안녕하세요? 반갑습니다. ~~^^
==> 위의 class를 java HELLO라고 CMD에 입력하면 출력이 되는 것을 확인 할수 있다. .class를 사용안하는 이유는 환경변수로 잡을 때 classpath를 .으로 하였다. 현재 위치에 있다라는 의미


